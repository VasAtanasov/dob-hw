# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
require_relative 'lib/dynamic_inventory'

settings_file = File.expand_path('settings.yml')

if File.exist? settings_file then
  settings = YAML.load_file settings_file
else
  abort "settings.yml was not found"
end

vagrant_assets = File.expand_path('assets')
if ! File.exists? vagrant_assets then
  vagrant_assets = File.expand_path(Dir.pwd)
end

VAGRANTFILE_API_VERSION = settings['VAGRANTFILE_API_VERSION'] || "2"

# machines = settings['machines']
machines = generate_machines(settings['machines'])
inventory_machines = machines.select {|m| m.name != "ansible" }
inventory = get_inventory(inventory_machines)

ANSIBLE_INVENTORY_FILE = "#{vagrant_assets}/ansible-dev/inventory.ini"
# create empty inventory file
File.open("#{ANSIBLE_INVENTORY_FILE}" ,'w') do | f |
  f.write ""
end

def add_host(file, machine)
  File.open("#{file}" ,'a') do | f |
    f.write "[#{machine.name}]\n"
    f.write "#{machine.hostname} ansible_host=#{machine.ip} ansible_ssh_port=22 ansible_ssh_user=vagrant ansible_ssh_pass=vagrant ansible_python_interpreter=/usr/bin/python3\n\n"
  end
end

# add all hosts to invenotry.ini file
inventory_machines.each do |machine|
  add_host(ANSIBLE_INVENTORY_FILE, machine)
end

#################
# Hosts for /etc/hosts
#################
hosts="\n"
machines.each do |machine|
  hosts += "#{machine.ip} #{machine.hostname} #{machine.name}\n"
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true

  machines.each do |machine|
    machine_name = machine.name
    machine_hostname = machine.hostname
    shared_dir = machine.synced_folder

    config.vm.define machine_name do |m|
      m.vm.box = machine.box
      m.vm.hostname = machine_hostname

      m.vm.provider "virtualbox" do |vb, override|
        vb.name = machine_name
        vb.memory = machine.memory
        vb.cpus = machine.cpu
        
        vb.customize ["modifyvm", :id, "--vram",               machine.vram]
        vb.customize ["modifyvm", :id, "--groups",             "/m5"]

        vb.check_guest_additions = false
        
        override.vm.synced_folder "#{vagrant_assets}", "#{shared_dir}"
      end

      #################
      # Networking :: private
      #################
      m.vm.network "private_network", ip: "#{machine.ip}"

      #################
      # Port forwarding
      #################
      machine.forwarded_port.each do |port|
        m.vm.network "forwarded_port", guest: port["guest"], host: port["host"], auto_correct: port["auto_correct"], id: port["id"]
      end

      #################
      # Append hosts to /etc/hosts
      #################
      if File.file?("#{vagrant_assets}/hosts") 
        m.vm.provision "===> Appendig hosts to #{machine_hostname} /etc/hosts", type: "shell" do |shell| 
          shell.inline = "echo '#{hosts}' >> /etc/hosts"
        end
      end

      #################
      # Provisioning
      #################
      machine.scripts.each do |script|
        m.vm.provision "#{script}", type: "shell" do |shell|
          shell.path = "#{vagrant_assets}/#{script['file']}"
          if script.has_key?('args')
              shell.args = script['args']
          end
        end
      end
      
    end

  end

end
